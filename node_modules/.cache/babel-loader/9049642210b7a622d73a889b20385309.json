{"ast":null,"code":"var _jsxFileName = \"/Users/sayajinbilal/Documents/Coding/React Course/project3/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: '',\n    bottomText: '',\n    randomImage: 'http://i.imgflip.com/1bij.jpg'\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    async function getMemes() {\n      const res = await fetch('https://api.imgflip.com/get_memes');\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n\n    getMemes();\n  }, []);\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: getMemeImage,\n        children: \"Get a new meme image \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        alt: \"MemeImage\",\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Meme, \"ijfAaUjNsGsYp92T7Xsc9fVWZA4=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/Users/sayajinbilal/Documents/Coding/React Course/project3/src/components/Meme.js"],"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMemes","useEffect","getMemes","res","fetch","data","json","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport default function Meme() {\n\tconst [meme, setMeme] = React.useState({\n\t\ttopText: '',\n\t\tbottomText: '',\n\t\trandomImage: 'http://i.imgflip.com/1bij.jpg',\n\t});\n\tconst [allMemes, setAllMemes] = React.useState([]);\n\n\tReact.useEffect(() => {\n\t\tasync function getMemes() {\n\t\t\tconst res = await fetch('https://api.imgflip.com/get_memes');\n\t\t\tconst data = await res.json();\n\t\t\tsetAllMemes(data.data.memes);\n\t\t}\n\t\tgetMemes();\n\t}, []);\n\n\tfunction getMemeImage() {\n\t\tconst randomNumber = Math.floor(Math.random() * allMemes.length);\n\t\tconst url = allMemes[randomNumber].url;\n\t\tsetMeme((prevMeme) => ({\n\t\t\t...prevMeme,\n\t\t\trandomImage: url,\n\t\t}));\n\t}\n\n\tfunction handleChange(event) {\n\t\tconst { name, value } = event.target;\n\t\tsetMeme((prevMeme) => ({\n\t\t\t...prevMeme,\n\t\t\t[name]: value,\n\t\t}));\n\t}\n\n\treturn (\n\t\t<main>\n\t\t\t<div className='form'>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Top text'\n\t\t\t\t\tclassName='form--input'\n\t\t\t\t\tname='topText'\n\t\t\t\t\tvalue={meme.topText}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Bottom text'\n\t\t\t\t\tclassName='form--input'\n\t\t\t\t\tname='bottomText'\n\t\t\t\t\tvalue={meme.bottomText}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<button className='form--button' onClick={getMemeImage}>\n\t\t\t\t\tGet a new meme image ðŸ–¼\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className='meme'>\n\t\t\t\t<img\n\t\t\t\t\tsrc={meme.randomImage}\n\t\t\t\t\talt='MemeImage'\n\t\t\t\t\tclassName='meme--image'\n\t\t\t\t/>\n\t\t\t\t<h2 className='meme--text top'>{meme.topText}</h2>\n\t\t\t\t<h2 className='meme--text bottom'>{meme.bottomText}</h2>\n\t\t\t</div>\n\t\t</main>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}